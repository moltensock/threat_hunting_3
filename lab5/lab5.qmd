---
title: "lab5"
author: "Федосимова Александра Дмитриевна"
format:   
  md:
    output-file: README.md
editor_options: 
  chunk_output_type: inline
---

# Анализ данных сетевого трафика с использованием аналитической СУБД Clickhouse

## Цель работы

1.  Изучить возможности СУБД Clickhouse для обработки и анализ больших данных
2.  Получить навыки применения Clickhouse совместно с языком программирования R
3.  Получить навыки анализа метаинфомации о сетевом трафике
4.  Получить навыки применения облачных технологий хранения, подготовки и анализа данных: Managed Service for ClickHouse, Rstudio Server.

## Исходные данные

1.  ОС Windows
2.  Clickhouse
3.  RStudio

## План

1.  Безопасно подключиться к СУБД Clickhouse
2.  Выполним практическое задание
3.  Составим отчет

## Описание шагов:

1.  Настраиваем переменные окружения

usethis::edit_r_environ()

```{r}
host <- Sys.getenv("HOST")
user <- Sys.getenv("USER")
pass <- Sys.getenv("PASS")
```

2.  Приступаем к выполнению практических заданий

```{r}
library(arrow, warn.conflicts = FALSE)
library(tidyverse, warn.conflicts = FALSE)
library(ClickHouseHTTP, warn.conflicts = FALSE)
library(DBI)
```

```{r}
connection <- dbConnect(
  ClickHouseHTTP::ClickHouseHTTP(),
  host=host,
  port=8443,
  user=user,
  password=pass,
  db="TMdata",
  https=TRUE,
  ssl_verifypeer=FALSE)
data<- dbGetQuery(connection, "SELECT * FROM data")

```

```{r}
task0 <- dbGetQuery(connection, "
  SELECT *
  FROM data
    LIMIT 5
")
task0
```

## Задание 1: Надите утечку данных из Вашей сети

Важнейшие документы с результатами нашей исследовательской деятельности в области создания вакцин скачиваются в виде больших заархивированных дампов. Один из хостов в нашей сети используется для пересылки этой информации – он пересылает гораздо больше информации на внешние ресурсы в Интернете, чем остальные компьютеры нашей сети. Определите его IP-адрес.

```{r}
task1 <- dbGetQuery(connection, "
  SELECT src, sum(bytes) as sum
  FROM data
  WHERE (src LIKE '12.%' OR src LIKE '13.%' OR src LIKE '14.%')
      AND (dst not LIKE '12.%' and dst not LIKE '13.%' and dst not LIKE '14.%')
    GROUP BY src
    ORDER BY sum DESC
    LIMIT 1
")
task1
```

```
13.37.84.125
```

## Задание 2: Найдите утечку данных 2

Другой атакующий установил автоматическую задачу в системном планировщике cron для экспорта содержимого внутренней wiki системы. Эта система генерирует большое количество трафика в нерабочие часы, больше чем остальные хосты. Определите IP этой системы. Известно, что ее IP адрес отличается от нарушителя из предыдущей задачи

```{r}

task2 <- data %>%
      select(timestamp, src, dst, bytes) %>%
      mutate(trafic = (str_detect(src, "^((12|13|14)\\.)") & !str_detect(dst, "^((12|13|14)\\.)")),time = hour(as_datetime(timestamp/1000))) %>%
      filter(trafic == TRUE, time >= 0 & time <= 24) %>% group_by(time) %>%
      summarise(trafictime = n()) %>% arrange(desc(trafictime))
task2 |> collect()
```

```{r}
task2_2 <- data %>% mutate(time = hour(as_datetime(timestamp/1000))) %>% 
  filter(!str_detect(src, "^13.37.84.125")) %>% 
  filter(str_detect(src, "^12.") | str_detect(src, "^13.") | str_detect(src, "^14."))  %>%
  filter(!grepl('^1[2-4].*', dst))  %>%
  filter(time >= 0 & time <= 15) %>% 
  group_by(src) %>% summarise("sum" = sum(bytes)) %>%
  arrange(desc(sum)) %>% select(src,sum) %>% slice(1)
task2_2 |> collect()
```

```
12.55.77.96
```

## Задание 3: Найдите утечку данных 3

Еще один нарушитель собирает содержимое электронной почты и отправляет в Интернет используя порт, который обычно используется для другого типа трафика. Атакующий пересылает большое количество информации используя этот порт, которое нехарактерно для других хостов, использующих этот номер порта. Определите IP этой системы. Известно, что ее IP адрес отличается от нарушителей из предыдущих задач.

```{r}
task3 <- data %>% filter(!str_detect(src, "^13.37.84.125")) %>% 
  filter(!str_detect(src, "^12.55.77.96")) %>% 
  filter(str_detect(src, "^12.") | str_detect(src, "^13.") | str_detect(src, "^14."))  %>%
  filter(!str_detect(dst, "^12.") | !str_detect(dst, "^13.") | !str_detect(dst, "^14."))  %>% select(src, bytes, port) 


task3_1 <-task3 %>%  group_by(port) %>% summarise("mean"=mean(bytes), "max"=max(bytes), "sum" = sum(bytes)) %>% 
  mutate("Raz"= max-mean)  %>% filter(Raz!=0, Raz>170000)

task3_1 |> collect()
```

```{r}
task3_2 <- task3  %>% filter(port==37) %>% group_by(src) %>% 
  summarise("mean"=mean(bytes)) %>% filter(mean>37543) %>% select(src)
task3_2 |> collect()
```

```
13.46.35.35
```

## Задание 4: Обнаружение канала управления

Зачастую в корпоротивных сетях находятся ранее зараженные системы, компрометация которых осталась незамеченной. Такие системы генерируют небольшое количество трафика для связи с панелью управления бот-сети, но с одинаковыми параметрами – в данном случае с одинаковым номером порта. Какой номер порта используется бот-панелью для управления ботами?

```{r}
task4 <- dbGetQuery(connection, "
  SELECT port, AVG(bytes) - min(bytes) as sume
  FROM data
  WHERE (select (AVG(bytes) - min(bytes)) from data) IS NOT NULL
    GROUP BY port
    ORDER BY sume
    LIMIT 8,1
  
")
task4
```

```
124
```

## Задание 5: Обнаружение P2P трафика

Иногда компрометация сети проявляется в нехарактерном трафике между хостами в локальной сети, который свидетельствует о горизонтальном перемещении (lateral movement). В нашей сети замечена система, которая ретранслирует по локальной сети полученные от панели управления бот-сети команды, создав таким образом внутреннюю пиринговую сеть. Какой уникальный порт используется этой бот сетью для внутреннего общения между собой?

```{r}
task5 <- dbGetQuery(connection, "
  SELECT port, max(bytes) - min(bytes) as sume
  FROM data
  WHERE (src LIKE '12.%' OR src LIKE '13.%' OR src LIKE '14.%')
      AND (dst  LIKE '12.%' or dst  LIKE '13.%' or dst  LIKE '14.%')
    GROUP BY port
    ORDER BY sume DESC
    LIMIT 1
")
task5
```

```
115
```

## Задание 6: Чемпион малвари

Нашу сеть только что внесли в списки спам-ферм. Один из хостов сети получает множество команд от панели C&C, ретранслируя их внутри сети. В обычных условиях причин для такого активного взаимодействия внутри сети у данного хоста нет. Определите IP такого хоста.

```{r}
task6 <- dbGetQuery(connection, "
  SELECT src, COUNT(src) as sume
  FROM data
  WHERE (src LIKE '12.%' OR src LIKE '13.%' OR src LIKE '14.%')
      AND (dst  LIKE '12.%' or dst  LIKE '13.%' or dst  LIKE '14.%')
    GROUP BY src
    ORDER BY sume DESC
    LIMIT 1
")
task6
```

```
13.42.70.40
```

## Задание 7: Скрытая бот-сеть

В нашем трафике есть еще одна бот-сеть, которая использует очень большой интервал подключения к панели управления. Хосты этой продвинутой бот-сети не входят в уже обнаруженную нами бот-сеть. Какой порт используется продвинутой бот-сетью для коммуникации?

```{r}
task7 <- dbGetQuery(connection, "
  SELECT port, AVG(timestamp) as time
  FROM data
   WHERE (src LIKE '12.%' OR src LIKE '13.%' OR src LIKE '14.%')
      AND (dst  LIKE '12.%' or dst  LIKE '13.%' or dst  LIKE '14.%')
  GROUP BY port
  ORDER BY time DESC
  LIMIT 1
")
task7
```

```
83
```

## Задание 8: Внутренний сканер

Одна из наших машин сканирует внутреннюю сеть. Что это за система?


```{r}
task8 <- dbGetQuery(connection, "
  SELECT src, AVG(timestamp) as time, count(DISTINCT dst) as coun
  FROM data
  WHERE (src LIKE '12.%' OR src LIKE '13.%' OR src LIKE '14.%')
      AND (dst  LIKE '12.%' or dst  LIKE '13.%' or dst  LIKE '14.%')
    GROUP BY src
    ORDER BY time 
    LIMIT 1
")
task8
```

```
12.35.59.94
```

## Оценка результатов

Задача выполнена при помощи приложения RStudio, СУБД Clickhouse.

## Вывод

СУБД Clickhouse подходит для обработки и анализа больших данных.